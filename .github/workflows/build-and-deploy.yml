name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: 10.9.8.121:5000
  IMAGE_NAME: sourdough-docs

jobs:
  build-and-push:
    runs-on: self-hosted
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Generate build metadata
      id: meta
      run: |
        # Generate version tag based on commit SHA and timestamp
        VERSION="${{ github.sha }}-$(date +%Y%m%d%H%M%S)"
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        
        # Generate tags
        if [ "${{ github.event_name }}" = "push" ] && [ "${{ github.ref }}" = "refs/heads/main" ]; then
          TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}"
        else
          TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}"
        fi
        echo "tags=${TAGS}" >> $GITHUB_OUTPUT
    
    - name: Build Docker image
      run: |
        # Build the Docker image with all tags
        for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr ',' ' '); do
          docker build -t "${tag}" .
        done
    
    - name: Test image
      run: |
        # Test that the image runs
        docker run --rm -d --name test-container -p 8080:80 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
        sleep 5
        # Check if nginx is responding
        curl -f http://localhost:8080 || (docker logs test-container && exit 1)
        docker stop test-container
    
    - name: Push to registry
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        # Push all tags to the registry
        for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr ',' ' '); do
          echo "Pushing ${tag}..."
          docker push "${tag}"
        done
    
    - name: Output deployment info
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        echo "### ðŸš€ Docker Image Deployed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Registry:** ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ steps.meta.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Pull command:**" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY